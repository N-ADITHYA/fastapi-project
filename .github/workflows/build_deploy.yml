name: Build and Deploy code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      TIME_AT_EXPIRATION: ${{secrets.TIME_AT_EXPIRATION}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling
        uses: actions/checkout@v2
      - name: Install Python v 3.11
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest
#      - name: Login to Docker
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#      - name: Set up docker buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Build and Push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          context: ./
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache
#      - name: Image digest
#        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production
    steps:
      - name: deploying stuff
        run: echo "going to deploy some stuff"
      - uses: actions/checkout@v3
                - name: Set up SSH
                run: |
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
                  ssh-keyscan ${{ secrets.PROD_HOST }} >> ~/.ssh/known_hosts
  #login to ubuntu server
  # cd /fastpp/src
  #systemctl restart api
      - name: deploy to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST}}
          username: ${{ secrets.PROD_USERNAME}}
          password: ${{ secrets.PROD_PASSWORD}}
          script: |
            cd fastpp/src
            git pull
            echo ${{ secrets.PROD_PASSWORD}} | sudo -s systemctl restart api